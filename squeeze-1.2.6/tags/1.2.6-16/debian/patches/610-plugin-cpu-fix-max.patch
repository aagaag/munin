Description: As per a mailing list thread, change Linux cpu plugin to not set 
 max for any fields because recent kernels are inaccurate to the point where a
 single field can edge just slightly over the calculated max if it is using
 all of the processor time (for example, the idle state can trigger this).
 Without removing the max, the affected fields have gaps, creating confusing 
 graphs.
 Slightly adapted the patch to match the plugin in 1.2.6
 Fixed upstream in r2352
Author: bldewolf
--- a/node/node.d.linux/cpu.in
+++ b/node/no4de.d.linux/cpu.in
@@ -78,5 +78,4 @@
        NCPU=$(egrep '^cpu[0-9]+ ' /proc/stat | wc -l)
 	PERCENT=$(($NCPU * 100))
-	MAX=$(($NCPU * 100))
 	if [ "$scaleto100" = "yes" ]; then
 		graphlimit=100
@@ -94,5 +93,4 @@
 	echo 'system.label system'
 	echo 'system.draw AREA'
-	echo "system.max $MAX"
 	echo 'system.min 0'
 	echo 'system.type DERIVE'
@@ -101,5 +99,4 @@
 	echo 'user.draw STACK'
 	echo 'user.min 0'
-	echo "user.max $MAX"
 	echo 'user.type DERIVE'
 	echo 'user.info CPU time spent by normal programs and daemons'
@@ -107,5 +104,4 @@
 	echo 'nice.draw STACK'
 	echo 'nice.min 0'
-	echo "nice.max $MAX"
 	echo 'nice.type DERIVE'
 	echo 'nice.info CPU time spent by nice(1)d programs'
@@ -113,5 +109,4 @@
 	echo 'idle.draw STACK'
 	echo 'idle.min 0'
-	echo "idle.max $MAX"
 	echo 'idle.type DERIVE'
 	echo 'idle.info Idle CPU time'
@@ -133,5 +128,4 @@
 		echo 'iowait.draw STACK'
 		echo 'iowait.min 0'
-		echo "iowait.max $MAX"
 		echo 'iowait.type DERIVE'
 		echo 'iowait.info CPU time spent waiting for I/O operations to finish when there is nothing else to do.'
@@ -139,5 +133,4 @@
 		echo 'irq.draw STACK'
 		echo 'irq.min 0'
-		echo "irq.max $MAX"
 		echo 'irq.type DERIVE'
 		echo 'irq.info CPU time spent handling interrupts'
@@ -145,5 +138,4 @@
 		echo 'softirq.draw STACK'
 		echo 'softirq.min 0'
-		echo "softirq.max $MAX"
 		echo 'softirq.type DERIVE'
 		echo 'softirq.info CPU time spent handling "batched" interrupts'
