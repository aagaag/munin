Description: Patch to munin-limits to change how it deals with new UNKNOWN
 values.  Related bug is linked in Bug-Debian:
Author: Steve Wilson
Bug-Debian: http://bugs.debian.org/501214
Index: munin-1.2.6/server/munin-limits.in
===================================================================
--- munin-1.2.6.orig/server/munin-limits.in	2008-02-18 02:00:00.000000000 +0100
+++ munin-1.2.6/server/munin-limits.in	2009-01-15 23:34:08.000000000 +0100
@@ -154,7 +154,8 @@
 	    }
 	    my $critical;
 	    my $warning;
-	    ($warning, $critical) = get_limits ($client, $domain, $name, $clientname, $key);
+	    my $unknown_limit;
+	    ($warning, $critical, $unknown_limit) = get_limits ($client, $domain, $name, $clientname, $key);
 
 	    my $filename = "$config->{dbdir}/$domain/$name-$clientname-$key-".
 	    lc substr (($client->{"$key.type"}||"GAUGE"),0,1) . ".rrd";
@@ -186,12 +187,22 @@
 		$client->{'worstid'} = 3 if $client->{"worstid"} == 0;
 		$notes{$domain}{$name}{$clientname}{"$key.state"} = "unknown";
 		$notes{$domain}{$name}{$clientname}{"$key.unknown"} = 
-		(defined $client->{"$key.extinfo"} ? "unknown: " . $client->{"$key.extinfo"} : "Value is unknown.");
-		if (!defined ($oldnotes->{'domain'}->{$domain}->{'node'}->{$name}->{'client'}->{$clientname}->{"$key.state"}) or 
-			$oldnotes->{'domain'}->{$domain}->{'node'}->{$name}->{'client'}->{$clientname}->{"$key.state"} ne "unknown")
+		    (defined $client->{"$key.extinfo"} ? "unknown: " . $client->{"$key.extinfo"} : "Value is unknown.");
+		$notes{$domain}{$name}{$clientname}{"$key.notify_countdown"} = 
+		    defined($oldnotes->{'domain'}->{$domain}->{'node'}->{$name}->{'client'}->{$clientname}->{"$key.notify_countdown"})
+			? $oldnotes->{'domain'}->{$domain}->{'node'}->{$name}->{'client'}->{$clientname}->{"$key.notify_countdown"}
+			: $unknown_limit;
+
+		# Check to see if the limit has been reached for consecutive UNKNOWN values.
+		# If so, then indicate that there's been a state change.
+		if ($notes{$domain}{$name}{$clientname}{"$key.notify_countdown"} > 0)
 		{
-		    $client->{'state_changed'} = 1;
-		}
+		    $notes{$domain}{$name}{$clientname}{"$key.notify_countdown"} -= 1;
+		    if ($notes{$domain}{$name}{$clientname}{"$key.notify_countdown"} == 0)
+		    {
+		   	$client->{'state_changed'} = 1;
+		    }
+	    	}
 	    }
 	    elsif ((defined ($critical->[0]) and $value < $critical->[0]) or
 	    (defined ($critical->[1]) and $value > $critical->[1])) {
@@ -229,12 +240,16 @@
 		{
 		    $client->{'state_changed'} = 1;
 		}
-	    } 
+	    }
 	    elsif (defined ($oldnotes->{'domain'}->{$domain}->{'node'}->{$name}->{'client'}->{$clientname}->{"$key.state"}) or
 		    $force)
 	    {
 		$notes{$domain}{$name}{$clientname}{"$key.ok"} = "OK";
-		$client->{'state_changed'} = 1;
+	    	if ( !($oldnotes->{'domain'}->{$domain}->{'node'}->{$name}->{'client'}->{$clientname}->{"$key.state"} eq "unknown" and
+	    		$oldnotes->{'domain'}->{$domain}->{'node'}->{$name}->{'client'}->{$clientname}->{"$key.notify_countdown"} > 0))
+		{
+			$client->{'state_changed'} = 1;
+		}
 	    }
 	}
     }
@@ -250,6 +265,7 @@
     my $key    = shift;
     my @critical = (undef, undef);
     my @warning  = (undef, undef);
+	my $unknown_limit = 3;
     if (defined $client->{"$key.critical"} and 
 	$client->{"$key.critical"} =~ /^\s*([-+\d.]*):([-+\d.]*)\s*$/)
     {
@@ -286,7 +302,15 @@
 	@warning = (0, 0);
 	logger ("processing warning: $domain -> $name -> $clientname -> $key -> $warning[0] : $warning[1]") if $DEBUG;
     }
-    return (\@warning, \@critical);
+
+	if (defined $client->{"$key.unknown_limit"} and 
+	$client->{"$key.unknown_limit"} =~ /^\s*(\d+)\s*$/)
+	{
+	$unknown_limit = $1 if defined $1;
+	logger ("processing unknown: $domain -> $name -> $clientname -> $key -> $unknown_limit") if $DEBUG;
+	}
+
+    return (\@warning, \@critical, $unknown_limit);
 }
 
 sub generate_service_message {
Index: munin-1.2.6/server/Munin.pm.in
===================================================================
--- munin-1.2.6.orig/server/Munin.pm.in	2009-01-15 23:34:43.000000000 +0100
+++ munin-1.2.6/server/Munin.pm.in	2009-01-15 23:35:16.000000000 +0100
@@ -81,7 +81,7 @@
 	"text", "command", "contact", "contacts",  "max_messages", 
 	"always_send", "notify_alias", "line", "state", "graph_period",
 	"cgiurl_graph", "cgiurl", "service_order", "category_order",
-	"version", "colour", "ok", "unknown"
+	"version", "colour", "ok", "unknown", "unknown_limit", "notify_countdown"
     );
 
 my %legal_expanded = map { $_ => 1 } @legal;
