Munin installation requirements
===============================

On all hosts:

- A reasonable Perl5

- The perl module Time::HiRes

- For TLS to work you'll need Net::SSLeay everywhere

- GNU Make - do not atempt to use any other make.

Server:

- A web server.  Apache HTTPD should be suitable.

- RRD with Perl support

- Perl modules for server: Time::HiRes, Storable, Digest::MD5,
  HTML::Template, Text::Balanced, Log::Log4perl (which depends on
  IPC::Shareable, Log::Dispatch, Log::Dispatch::FileRotate,
  MIME::Lite, Mail::Sender, Mail::Sendmail, MailTools,
  Params::Validate and TimeDate)

Node:

- Perl modules: Net::Server, Time::HiRes

- All SNMP pugins use Net::SNMP

- Perl modules for plugins: Depends on the plugins you want to use,
  but not many.

If you're missing some perl modules and they are not in your package
system it's recommended to use the cpan shell (as root) to install the
needed ones:

  perl -MCPAN -e shell


Installing
==========

There are make targets for node, master, documentation and man files.
Generally you want to install everything on the master, and just the
node on ... the nodes.

To install both master and node:

	- Review/edit Makefile.config to suite your needs.

	- Create the user "munin".

	- make

	- make install

        - In your HTMLDIR you will now find a .htaccess file with two
          main features:

	  * Password protection. Users/passwords are kept in
	    CONFDIR/munin-httpasswd. Use htpasswd to create/modify users in
	    normal Apache fashion. 

	  * Munin page expiery to refresh contents. This requires mod_expiery
	    to be enabled.

	  NOTE: Both these features require the relevant AllowOverride
	  statement in Apache. AuthConfig and Indexes, respectively.

          If you already have a .htaccess file in HTMLDIR it will not
          be overwritten.

	  If you prefer that munin be openly available make the
	  .htaccess file empty to avoid overwriting it later.

	- Review CONFDIR/munin.conf to set up some nodes. At least one node
	  needs to have at least one functional plugin for HTML generation.

	- Create a cron-entry to run "munin-cron" as the user "munin"
	  every 5 minutes.  See build/dists or build/resources for
	  distribution-specific scripts.

	- If you want to use the dynamic graphs: Configure the CGI
	  directory, you will find a Apache config example in
	  build/resources.  
	  
	  NOTE: Dynamic graphs are not exactly perfect. Se also
          http://munin.projects.linpro.no/wiki/CgiHowto

To install a node:

	- Edit Makefile.config to suite your needs.

	- Create the group "munin".

	- make

	- make install-common-prime install-node-prime install-plugins-prime

	  NOTE: This overwrites any existing plugins.

	- Decide which plugins to use.  The quick auto-plug-and-play
          solution: 
          munin-node-configure --shell --families=contrib,auto | sh -x

	- Review CONFDIR/munin-node.conf. Ensure that your munin-master can
	  access it.

	- Start the node agent (as root) SBINDIR/munin-node.

	  You probably want to use an init-script instead and you
          might find a good one under dists/ or in the resources/
          directory (maybe you need to edit the init script, check the
          given paths in the script you might use).


For further build alternatives, see Makefile.


Munin-gather
============

Munin-gather is an incomplete work in progress for the server side.
Please ignore it, and if you're a packager certainly don't package it.


Notes about node plugins
========================

"make install-node-plugins" installs the plugins in LIBDIR (defined in
Makefile.config). Put the ones you want to use (or better yet, create
softlinks) in CONFDIR/plugins/ . An easy way to do this, is the
program "munin-node-configure", using the parameter "--shell". It will
then suggest commands to do this.

Some of the plugins require some configuration to get running.  Some
example configuration files (plugins.conf) is found under the
build/dists directory.

Whenever the plugin list changes, the node needs to be restarted. 

Many OSes and releases thereof have different ways of gathering data.
A lot of OSes still have none.  If you create plugins for an OS/system
which is not already in the package, please send us a copy of them, so
we can add them for others to use.  We'd also be happy if you sent us
any new plugins on systems already in the package.
