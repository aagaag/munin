#! /bin/sh /usr/share/dpatch/dpatch-run
## 10_fix_SSLeay_warnings.dpatch by Guido Guenther <agx@sigxcpu.org>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: fix warnings because print_eers is called without any arguments, at 
## DP: least libnet-ssleay-perl 1.25 in sarge needs this

@DPATCH@

--- node/munin-node.in	2006-04-24 14:02:50.000000000 +0200
+++ node/munin-node.in	2006-04-26 12:58:40.000000000 +0200
@@ -559,7 +559,7 @@
     if (defined $tls)
     {
 	eval { $_ = Net::SSLeay::read($tls); };
-	my $err = &Net::SSLeay::print_errs();
+	my $err = &Net::SSLeay::print_errs("");
 	if (defined $err and length $err)
 	{
 	    logger ("TLS Warning in net_read: $err");
@@ -580,7 +580,7 @@
     if (defined $tls)
     {
 	eval { Net::SSLeay::write ($tls, $text); };
-	my $err = &Net::SSLeay::print_errs();
+	my $err = &Net::SSLeay::print_errs("");
 	if (defined $err and length $err)
 	{
 	    logger ("TLS Warning in net_write: $err");
@@ -652,14 +652,14 @@
     $ctx = Net::SSLeay::CTX_new();
     if (!$ctx)
     {
-	logger ("TLS Error: Could not create SSL_CTX: " . &Net::SSLeay::print_errs());
+	logger ("TLS Error: Could not create SSL_CTX: " . &Net::SSLeay::print_errs(""));
 	return 0;
     }
 
     # Tune a few things...
     if (Net::SSLeay::CTX_set_options($ctx, &Net::SSLeay::OP_ALL))
     {
-	logger ("TLS Error: Could not set SSL_CTX options: " . &Net::SSLeay::print_errs());
+	logger ("TLS Error: Could not set SSL_CTX options: " . &Net::SSLeay::print_errs(""));
 	return 0;
     }
 
@@ -671,7 +671,7 @@
 	    if (!Net::SSLeay::CTX_use_PrivateKey_file($ctx, $tls_priv, 
 		    &Net::SSLeay::FILETYPE_PEM))
 	    {
-	        logger ("TLS Notice: Problem occured when trying to read file with private key \"$tls_priv\": ".&Net::SSLeay::print_errs().". Continuing without private key.");
+	        logger ("TLS Notice: Problem occured when trying to read file with private key \"$tls_priv\": ".&Net::SSLeay::print_errs("").". Continuing without private key.");
 	    }
 	    else
 	    {
@@ -692,7 +692,7 @@
 	    if (!Net::SSLeay::CTX_use_certificate_file($ctx, $tls_cert, 
 		    &Net::SSLeay::FILETYPE_PEM))
 	    {
-	        logger ("TLS Notice: Problem occured when trying to read file with certificate \"$tls_cert\": ".&Net::SSLeay::print_errs().". Continuing without certificate.");
+	        logger ("TLS Notice: Problem occured when trying to read file with certificate \"$tls_cert\": ".&Net::SSLeay::print_errs("").". Continuing without certificate.");
 	    }
 	}
     }
@@ -714,13 +714,13 @@
     # Now let's define our requirements of the node
     $tls_vdepth = 5 unless defined $tls_vdepth;
     Net::SSLeay::CTX_set_verify_depth ($ctx, $tls_vdepth);
-    $err = &Net::SSLeay::print_errs();
+    $err = &Net::SSLeay::print_errs("");
     if (defined $err and length $err)
     {
 	logger ("TLS Warning in set_verify_depth: $err");
     }
     Net::SSLeay::CTX_set_verify ($ctx, &Net::SSLeay::VERIFY_PEER, \&tls_verify_callback);
-    $err = &Net::SSLeay::print_errs();
+    $err = &Net::SSLeay::print_errs("");
     if (defined $err and length $err)
     {
 	logger ("TLS Warning in set_verify: $err");
@@ -729,7 +729,7 @@
     # Create the local tls object
     if (! ($tls = Net::SSLeay::new($ctx)))
     {
-	logger ("TLS Error: Could not create TLS: " . &Net::SSLeay::print_errs());
+	logger ("TLS Error: Could not create TLS: " . &Net::SSLeay::print_errs(""));
 	return 0;
     }
     if ($DEBUG)
@@ -750,13 +750,13 @@
 
     # Redirect stdout/stdin to the TLS
     Net::SSLeay::set_rfd($tls, fileno(STDIN));
-    $err = &Net::SSLeay::print_errs();
+    $err = &Net::SSLeay::print_errs("");
     if (defined $err and length $err)
     {
 	logger ("TLS Warning in set_rfd: $err");
     }
     Net::SSLeay::set_wfd($tls, fileno(STDOUT));
-    $err = &Net::SSLeay::print_errs();
+    $err = &Net::SSLeay::print_errs("");
     if (defined $err and length $err)
     {
 	logger ("TLS Warning in set_wfd: $err");
@@ -772,7 +772,7 @@
     {
         $res = Net::SSLeay::connect($tls);
     }
-    $err = &Net::SSLeay::print_errs();
+    $err = &Net::SSLeay::print_errs("");
     if (defined $err and length $err)
     {
 	logger ("TLS Error: Could not enable TLS: " . $err);
--- server/munin-update.in	2006-04-24 14:02:48.000000000 +0200
+++ server/munin-update.in	2006-04-26 12:57:40.000000000 +0200
@@ -729,13 +729,13 @@
     # Now let's define our requirements of the node
     $tls_vdepth = 5 if !defined $tls_vdepth;
     Net::SSLeay::CTX_set_verify_depth ($ctx, $tls_vdepth);
-    $err = &Net::SSLeay::print_errs();
+    $err = &Net::SSLeay::print_errs("");
     if (defined $err and length $err)
     {
 	logger ("TLS Warning in set_verify_depth: $err");
     }
     Net::SSLeay::CTX_set_verify ($ctx, &Net::SSLeay::VERIFY_PEER, \&tls_verify_callback);
-    $err = &Net::SSLeay::print_errs();
+    $err = &Net::SSLeay::print_errs("");
     if (defined $err and length $err)
     {
 	logger ("TLS Warning in set_verify: $err");
@@ -765,7 +765,7 @@
 
     # Connect it to the local fd that munin-update will print to
     Net::SSLeay::set_fd($tls, fileno($socket));
-    $err = &Net::SSLeay::print_errs();
+    $err = &Net::SSLeay::print_errs("");
     if (defined $err and length $err)
     {
 	logger ("TLS Error: Could not define encrypted fd: " . $err);
@@ -781,7 +781,7 @@
     {
         $res = Net::SSLeay::accept($tls);
     }
-    $err = &Net::SSLeay::print_errs();
+    $err = &Net::SSLeay::print_errs("");
     if (defined $err and length $err)
     {
 	logger ("TLS Error: Could not enable TLS: " . $err);
@@ -818,7 +818,7 @@
 	if (defined $tls and $tls)
 	{
 	    Net::SSLeay::write($tls, $text);
-	    my $err = &Net::SSLeay::print_errs();
+	    my $err = &Net::SSLeay::print_errs("");
 	    if (defined $err and length $err)
 	    {
 		logger ("TLS Warning in write_socket_single: $err");
@@ -847,7 +847,7 @@
       if ($tls)
       {
 	  $res = Net::SSLeay::read($tls);
-	  my $err = &Net::SSLeay::print_errs();
+	  my $err = &Net::SSLeay::print_errs("");
 	  if (defined $err and length $err)
 	  {
 	    logger ("TLS Warning in read_socket_single: $err");
@@ -882,7 +882,7 @@
       if ($tls)
       {
 	  while (defined ($_ = Net::SSLeay::read($tls))) {
-	    my $err = &Net::SSLeay::print_errs();
+	    my $err = &Net::SSLeay::print_errs("");
 	    if (defined $err and length $err)
 	    {
 	      logger ("TLS Warning in read_socket: $err");
